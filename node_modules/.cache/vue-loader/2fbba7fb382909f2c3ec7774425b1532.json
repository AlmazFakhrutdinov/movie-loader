{"remainingRequest":"/home/user/movie-loader/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/user/movie-loader/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/user/movie-loader/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/user/movie-loader/src/components/second.vue?vue&type=template&id=e31e96f8&","dependencies":[{"path":"/home/user/movie-loader/src/components/second.vue","mtime":1574376591762},{"path":"/home/user/movie-loader/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user/movie-loader/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/user/movie-loader/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user/movie-loader/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}