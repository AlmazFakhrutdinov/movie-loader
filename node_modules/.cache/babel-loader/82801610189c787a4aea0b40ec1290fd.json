{"remainingRequest":"/home/user/movie-loader/node_modules/babel-loader/lib/index.js!/home/user/movie-loader/node_modules/eslint-loader/index.js??ref--13-0!/home/user/movie-loader/src/store/index.js","dependencies":[{"path":"/home/user/movie-loader/src/store/index.js","mtime":1574356382897},{"path":"/home/user/movie-loader/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user/movie-loader/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/user/movie-loader/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZvci1lYWNoIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IiOwppbXBvcnQgX3NsaWNlZFRvQXJyYXkgZnJvbSAiL2hvbWUvdXNlci9tb3ZpZS1sb2FkZXIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lLWNvcmVqczMvaGVscGVycy9lc20vc2xpY2VkVG9BcnJheSI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IFZ1ZSBmcm9tICd2dWUnOwppbXBvcnQgVnVleCBmcm9tICd2dWV4JzsKaW1wb3J0IGFwaSBmcm9tICIuL2FwaSI7ClZ1ZS51c2UoVnVleCk7CnZhciBzdG9yZSA9IG5ldyBWdWV4LlN0b3JlKHsKICBzdGF0ZTogewogICAgYWxsQ2F0ZWdvcmllczogW10sCiAgICBtb3ZpZUJ5Q2F0ZWdvcmllczogW10sCiAgICBsb2FkaW5nOiB0cnVlCiAgfSwKICBnZXR0ZXJzOiB7fSwKICBhY3Rpb25zOiB7CiAgICBHRVRfTU9WSUU6IGZ1bmN0aW9uIEdFVF9NT1ZJRShjb250ZXh0LCBfcmVmKSB7CiAgICAgIHZhciBfcmVmMiwgcGFnZU51bWJlciwgY2hlY2tib3hHcm91cCwgY2F0ZWdvcmllczsKCiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXN5bmMoZnVuY3Rpb24gR0VUX01PVklFJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfcmVmMiA9IF9zbGljZWRUb0FycmF5KF9yZWYsIDIpLCBwYWdlTnVtYmVyID0gX3JlZjJbMF0sIGNoZWNrYm94R3JvdXAgPSBfcmVmMlsxXTsKCiAgICAgICAgICAgICAgaWYgKCFjb250ZXh0W3BhZ2VOdW1iZXJdKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIik7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDU7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDg7CiAgICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hd3JhcChQcm9taXNlLmFsbChbYXBpLmdldE5vd1BsYXlpbmcocGFnZU51bWJlciksIGFwaS5nZXRQb3B1bGFyKHBhZ2VOdW1iZXIpLCBhcGkuZ2V0VG9wUmF0ZWQocGFnZU51bWJlciksIGFwaS5nZXRVcGNvbWluZyhwYWdlTnVtYmVyKV0pKTsKCiAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICBjYXRlZ29yaWVzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgnU0VUX0FMTF9DQVRFR09SSUVTJywgW2NhdGVnb3JpZXMsIHBhZ2VOdW1iZXIsIGNoZWNrYm94R3JvdXBdKTsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTU7CiAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxMjsKICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDUpOwogICAgICAgICAgICAgIHdpbmRvdy5jb25zb2xlLmxvZyhfY29udGV4dC50MCk7CgogICAgICAgICAgICBjYXNlIDE1OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBudWxsLCBudWxsLCBbWzUsIDEyXV0pOwogICAgfQogIH0sCiAgbXV0YXRpb25zOiB7CiAgICBTRVRfQUxMX0NBVEVHT1JJRVM6IGZ1bmN0aW9uIFNFVF9BTExfQ0FURUdPUklFUyhzdGF0ZSwgX3JlZjMpIHsKICAgICAgdmFyIF9yZWY0ID0gX3NsaWNlZFRvQXJyYXkoX3JlZjMsIDMpLAogICAgICAgICAgY2F0ZWdvcmllcyA9IF9yZWY0WzBdLAogICAgICAgICAgcGFnZU51bWJlciA9IF9yZWY0WzFdLAogICAgICAgICAgY2hlY2tib3hHcm91cCA9IF9yZWY0WzJdOwoKICAgICAgZm9yICh2YXIgaiA9IDA7IGogPD0gY2F0ZWdvcmllcy5sZW5ndGggLSAxOyBqKyspIHsKICAgICAgICBjYXRlZ29yaWVzW2pdLmRhdGEucmVzdWx0cy5mb3JFYWNoKGZ1bmN0aW9uIChlbGVtZW50KSB7CiAgICAgICAgICBlbGVtZW50LnBvc3Rlcl9wYXRoID0gImh0dHBzOi8vaW1hZ2UudG1kYi5vcmcvdC9wL3cxODVfYW5kX2gyNzhfYmVzdHYyIi5jb25jYXQoZWxlbWVudC5wb3N0ZXJfcGF0aCk7CiAgICAgICAgfSk7CiAgICAgIH0KCiAgICAgIHN0YXRlLmFsbENhdGVnb3JpZXNbcGFnZU51bWJlcl0gPSB7CiAgICAgICAgbm93UGxheWluZzogY2F0ZWdvcmllc1swXS5kYXRhLnJlc3VsdHMsCiAgICAgICAgcG9wdWxhcjogY2F0ZWdvcmllc1sxXS5kYXRhLnJlc3VsdHMsCiAgICAgICAgdG9wUmF0ZWQ6IGNhdGVnb3JpZXNbMl0uZGF0YS5yZXN1bHRzLAogICAgICAgIHVwY29taW5nOiBjYXRlZ29yaWVzWzNdLmRhdGEucmVzdWx0cwogICAgICB9OwogICAgICB2YXIgbW92aWUgPSBbXTsKICAgICAgdmFyIGNhdGVnb3JpZXNJdGVtID0gc3RhdGUuYWxsQ2F0ZWdvcmllc1twYWdlTnVtYmVyXTsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDw9IGNoZWNrYm94R3JvdXAubGVuZ3RoIC0gMTsgaSsrKSB7CiAgICAgICAgY2F0ZWdvcmllc0l0ZW1bY2hlY2tib3hHcm91cFtpXV0uZm9yRWFjaChmdW5jdGlvbiAoZWxlbWVudCkgewogICAgICAgICAgLy8g0YHQu9C+0LbQvdC+0LLQsNGC0L4g0LLRi9Cz0LvRj9C00LjRggogICAgICAgICAgaWYgKCFtb3ZpZS5pbmNsdWRlcyhtb3ZpZS5maW5kKGZ1bmN0aW9uIChlbGVtKSB7CiAgICAgICAgICAgIHJldHVybiBlbGVtLmlkID09IGVsZW1lbnQuaWQ7CiAgICAgICAgICB9KSkpIHsKICAgICAgICAgICAgbW92aWUucHVzaChlbGVtZW50KTsKICAgICAgICAgIH0gLy8gd2luZG93LmNvbnNvbGUubG9nKGlkKQogICAgICAgICAgLy8gaWYoZWxlbWVudC5pZCA9PSBpZCkgewogICAgICAgICAgLy8gICB3aW5kb3cuY29uc29sZS5sb2coJ2FsZGYnKQogICAgICAgICAgLy8gfQogICAgICAgICAgLy8gbW92aWUuaWQuaW5jbHVkZXMoZWxlbWVudC5pZCkgPyB3aW5kb3cuY29uc29sZS5sb2coJ2RhJykgOiB3aW5kb3cuY29uc29sZS5sb2coJ25ldCcpCiAgICAgICAgICAvLyBpZihtb3ZpZS5pbmNsdWRlcyhlbGVtZW50LmlkKSkgewogICAgICAgICAgLy8gICB3aW5kb3cuY29uc29sZS5sb2coJ2VsZW1lbnQuaWQnLCBlbGVtZW50LmlkKQogICAgICAgICAgLy8gfQoKICAgICAgICB9KTsKICAgICAgfSAvLyBpZihtb3ZpZS5pZCkKCgogICAgICBzdGF0ZS5tb3ZpZUJ5Q2F0ZWdvcmllcyA9IG1vdmllOwogICAgICBzdGF0ZS5sb2FkaW5nID0gZmFsc2U7CiAgICB9LAogICAgU0VUX01PVklFOiBmdW5jdGlvbiBTRVRfTU9WSUUoc3RhdGUsIF9yZWY1KSB7CiAgICAgIHZhciBfcmVmNiA9IF9zbGljZWRUb0FycmF5KF9yZWY1LCAyKSwKICAgICAgICAgIHBhZ2VOdW1iZXIgPSBfcmVmNlswXSwKICAgICAgICAgIGNoZWNrYm94R3JvdXAgPSBfcmVmNlsxXTsKCiAgICAgIHZhciBtb3ZpZSA9IFtdOwogICAgICB2YXIgY2F0ZWdvcmllc0l0ZW0gPSBzdGF0ZS5hbGxDYXRlZ29yaWVzW3BhZ2VOdW1iZXJdOwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPD0gY2hlY2tib3hHcm91cC5sZW5ndGggLSAxOyBpKyspIHsKICAgICAgICBjYXRlZ29yaWVzSXRlbVtjaGVja2JveEdyb3VwW2ldXS5mb3JFYWNoKGZ1bmN0aW9uIChlbGVtZW50KSB7CiAgICAgICAgICBtb3ZpZS5wdXNoKGVsZW1lbnQpOwogICAgICAgIH0pOwogICAgICB9CgogICAgICBzdGF0ZS5tb3ZpZUJ5Q2F0ZWdvcmllcyA9IG1vdmllOwogICAgfQogIH0KfSk7CmV4cG9ydCBkZWZhdWx0IHN0b3JlOw=="},{"version":3,"sources":["/home/user/movie-loader/src/store/index.js"],"names":["Vue","Vuex","api","use","store","Store","state","allCategories","movieByCategories","loading","getters","actions","GET_MOVIE","context","pageNumber","checkboxGroup","Promise","all","getNowPlaying","getPopular","getTopRated","getUpcoming","categories","commit","window","console","log","mutations","SET_ALL_CATEGORIES","j","length","data","results","forEach","element","poster_path","nowPlaying","popular","topRated","upcoming","movie","categoriesItem","i","includes","find","elem","id","push","SET_MOVIE"],"mappings":"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","sourcesContent":["import Vue from 'vue';\nimport Vuex from 'vuex';\nimport api from './api'\n\nVue.use(Vuex)\n\nconst store = new Vuex.Store({\n  state: {\n    allCategories: [],\n    movieByCategories: [],\n    loading: true,\n\n  },\n  getters: {\n\n  },\n  actions: {\n    async GET_MOVIE(context, [pageNumber, checkboxGroup]) {\n      if (context[pageNumber]) {\n        return\n        // зачем \"else\" если и так return в if'e?\n      } else {\n        try {\n          // const api = Vue.prototype.$api // не плохо ебать\n          // но почему не так:\n\n          /*\n          import api from './api'\n          вместо того что доставать из Vue.prototype\n          */\n\n          const categories = await Promise.all([\n            api.getNowPlaying(pageNumber),\n            api.getPopular(pageNumber), \n            api.getTopRated(pageNumber), \n            api.getUpcoming(pageNumber)\n          ])\n          context.commit('SET_ALL_CATEGORIES', [categories, pageNumber, checkboxGroup])\n        } catch (error) {\n          window.console.log(error)\n        }\n      }\n\n    }\n  },\n  mutations: {\n    SET_ALL_CATEGORIES(state, [categories, pageNumber, checkboxGroup]) {\n      for(let j = 0; j <= categories.length - 1; j++) {\n        categories[j].data.results.forEach(element => {\n          element.poster_path = `https://image.tmdb.org/t/p/w185_and_h278_bestv2${ element.poster_path }`\n        })\n      }\n\n      state.allCategories[pageNumber] = {\n        nowPlaying: categories[0].data.results,\n        popular: categories[1].data.results,\n        topRated: categories[2].data.results,\n        upcoming: categories[3].data.results\n      } \n      \n      const movie = []\n      const categoriesItem = state.allCategories[pageNumber]\n      for (let i = 0; i <= checkboxGroup.length - 1; i++) {\n        categoriesItem[checkboxGroup[i]].forEach(element => {\n          // сложновато выглядит\n          if(!movie.includes(movie.find(elem => elem.id == element.id))) {\n            movie.push(element)\n          } \n          // window.console.log(id)\n          // if(element.id == id) {\n          //   window.console.log('aldf')\n          // }\n          // movie.id.includes(element.id) ? window.console.log('da') : window.console.log('net')\n          // if(movie.includes(element.id)) {\n          //   window.console.log('element.id', element.id)\n          // }\n        \n          \n        });\n      }\n\n      // if(movie.id)\n\n      state.movieByCategories = movie\n      state.loading = false\n    },\n    SET_MOVIE(state, [pageNumber, checkboxGroup]) {\n      const movie = []\n      const categoriesItem = state.allCategories[pageNumber]\n\n      for (let i = 0; i <= checkboxGroup.length - 1; i++) {\n        categoriesItem[checkboxGroup[i]].forEach(element => {\n          movie.push(element)\n        });\n      }\n\n      state.movieByCategories = movie\n    }\n  }\n})\n\nexport default store"]}]}